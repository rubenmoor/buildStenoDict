// apart from the single-line comments '//', this is valid json
// the rules for each entry:
//   * the whole file is a json array
//   * each value is an array with two values
//     * the first entry is the original text (written German)
//     * the second entry is an array describing a steno pattern
//   * the same input text can appear multiple times to allow multiple distinct steno patterns
//   * e.g. "c" points to GD (in the onset) and K (in the coda of a syllable)
//   * the arry describing the steno patterns has at least two values
//     * the first value is the greediness (see below)
//     * the second value is one or more steno keys
//     * a / in the steno keys is allowed and marks a new chord
//     * e.g. "Meer" maps to "ME/EO" due to the pattern for "eer"
//     * the patterns containing / require part-length information
//         * in patterns w/o / the part-length is equal to the length of the original text
//         * in patterns with /, the part-length is given by a number
//         * e.g. in "eer", [0, "E/EO", 1] the length of the first part is 1,
//           corresponding to the first "e" in "eer"
//         * the length of the second part is the length of the remaining text "er", 2
//   * greediness is a number from 0 to the current maximum of 2
//     * 0 corresponds to the minimum complete set of steno pattern
//     * every letter of original text must be covered by at least one greediness-0-pattern (G0-patterns)
//     * 1 corresponds to "greedier" patterns, e.g. patterns that make use of the steno key n
//       to increase efficiency (less chords per letter)
//     * ideally, G1-patterns don't cause any ambiguity or confusion (tbd.)
//     * 2 should correspond to experimental patterns that, ideally, increase efficiency
//       but might result in weird and impractical patterns
//   * the order of the entries does not matter, but should stay lexicographic for readability
//   * patterns for words (or syllables) of english or french origin,
//     are at the bottom (this isn't a 100% accurate)
//   * patterns that describe entire syllables (usually syllables that don't follow the common
//     rules) are at the bottom ("whole syllable exceptions")
//   * patterns that describe entire words have their own file (exceptions.json5)
[ [ "a"   , [0, "A"]]
, [ "á"   , [0, "A"]]
, [ "à"   , [0, "A"]]
, [ "â"   , [0, "A"]]
, [ "å"   , [0, "A"]]          // Ux00E5
, [ "aa"  , [0, "A/A", 1]]
, [ "aar" , [0, "A/AO", 1]]
, [ "ae"  , [0, "AI"]]         // e.g. aerodynamisch
, [ "ah"  , [0, "AO"]]
, [ "ahr" , [0, "AO"]]
// TODO: greedier: ah|r: [0, "AO"]
, [ "ar"  , [0, "AO"]]
, [ "år"  , [0, "AO"]]          // Ux00E5
, [ "arr" , [0, "AO+"]]
, [ "arrh", [0, "AO+"]]         // Katarrh
, [ "aß"  , [0, "AO+S"]]
, [ "ä"   , [0, "Ä"]]           // note: ÄO is ö
, [ "äe"  , [0, "Ä"]]           // e.g. Tro|phäe
, [ "äh"  , [0, "Ä"]]
, [ "ähr" , [0, "Ä"]]
, [ "är"  , [0, "Ä"]]
, [ "ärr" , [0, "Ä+"]]
, [ "äß"  , [0, "Ä+S"]]
, [ "b"   , [0, "B"]]
, [ "b"   , [0, "P"]]
, [ "bb"  , [0, "P"]]
, [ "be"  , [1, "B"]]
// , "beau|ty" : [0, "BJU/DJI"] // / is allowed, but this pattern fails for the more efficient (but wrong
//                              pattern eau, thus: full word exception
, [ "bi|o", [1, "BJO"]]
, [ "böe" , [0, "BÄO"]]      // Böe = "Bö"
, [ "c"   , [0, "GD"]]
, [ "c"   , [0, "K"]]
, [ "ç"   , [0, "SF"]]       // U+00E7
, [ "ca"  , [0, "GDA"]]      // phonetic k
, [ "cä"  , [0, "SFÄ"]]      // phonetic z
, [ "ce"  , [0, "SJE"]]      // onset: phonetic tsch: Cellist; coda: -ice
, [ "ce"  , [1, "Ss"]]
, [ "ch"  , [0, "SJ"]]       // normal case
, [ "ch"  , [0, "Kʃ"]]
, [ "chia", [0, "SJA"]]
, [ "chio", [0, "SJO"]]
, [ "chs" , [0, "KS"]]
, [ "ci"  , [0, "SFI"]]      // normal case
, [ "cia" , [0, "SJA"]]      // phonetic tsch: ciao, ciabatta
, [ "ck"  , [0, "GD"]]
, [ "ck"  , [0, "K"]]
, [ "d"   , [0, "D"]]
, [ "d|d" , [1, "D"]]
, [ "de"  , [1, "D-"]]
, [ "dh"  , [0, "D"]]       // Abu-Dhabi, Buddhist
, [ "di"  , [1, "D-"]]
, [ "dia" , [0, "DJA"]]      // TODO documenation ia-rule
, [ "ds"  , [0, "s"]]
, [ "dsch", [0, "SDJ"]]      // note: also "ps" = SDJ TODO: documentation
, [ "dt"  , [0, "-D"]]
, [ "e"   , [0, "E"]]
, [ "e"   , [1, "s"]]
// , "e"   : [0, "e"] // TODO: greedier: -e
, [ "é"   , [0, "E"]]
, [ "è"   , [0, "E"]]
, [ "ère" , [0, "EO"]]
, [ "ê"   , [0, "E"]]
, [ "ë"   , [0, "E"]]        // U+00EB
, [ "ee"  , [0, "Es"]]       // TODO: documentation for ee-rule
, [ "ee"  , [0, "E/E", 1]]      // 
, [ "eer" , [0, "E/EO", 1]]
, [ "ée"  , [0, "Es"]]
, [ "eh"  , [0, "EO"]]
, [ "ehr" , [0, "EO"]]
, [ "eih" , [0, "EI"]]
// , [ "en"  , [1, "N-"]] 
, [ "en"  , [1, "n"]]        // TODO: greedier: "ren" -> n
// TODO: ent-: ENT should be valid, too, because BDN adds little efficiency
// maybe BDN for ent^ (works already implicitly)
, [ "ent" , [1, "BDN"]]     // ent = "tn" -> BDN
, [ "er"  , [0, "EO"]]   
// "er"  : [0, "R", "EO"] // TODO: efficiency for "er" in onset
, [ "err" , [0, "EO+"]]
, [ "eß"  , [0, "EO+S"]]
, [ "f"   , [0, "F"]]
, [ "ff"  , [0, "F"]]
, [ "f|f" , [1, "F"]]
, [ "fluor", [0, "FLU/~O", 3]]
, [ "fluo", [0, "FLU/O", 3]]
, [ "fst" , [0, "Fs"]]
, [ "g"   , [0, "G"]]
, [ "g"   , [0, "K"]]
, [ "ge"  , [1, "G"]]
, [ "g|g" , [1, "G"]]
, [ "gui" , [0, "GI"]]
, [ "h"   , [0, "H"]]
, [ "i"   , [0, "I"]]
, [ "í"   , [0, "I"]]
, [ "ia"  , [0, "JA"]]
, [ "ie"  , [0, "~I"]]
, [ "ieh" , [0, "~I"]]
, [ "ier" , [0, "~I"]]
, [ "ih"  , [0, "~I"]]
, [ "ihr" , [0, "~I"]]
, [ "io"  , [0, "JO"]]      // TODO: doesn't solve mio, wio, lio, nio, rio, note: i|o is addressed by syllable parser
, [ "ir"  , [0, "~I"]]
, [ "irr" , [0, "~I+"]]
, [ "iß"  , [0, "~I+S"]]
, [ "iv"  , [0, "-F"]]       // TODO: documentation
, [ "j"   , [0, "J"]]
, [ "k"   , [0, "GD"]] 
, [ "k"   , [0, "K"]]
, [ "kh"  , [0, "K"]]       // Khmer
// TODO: fe -> F maybe?
// TODO: greedier: er : [0, "e"]
, [ "l"   , [0, "L"]]
, [ "lh"  , [0, "L"]]       // e.g. Delhi
, [ "lia" , [0, "JLA"]]     // think "lia"/"ila"
, [ "lio" , [0, "JLO"]]     // think "lio"/"ilo"
, [ "lg"  , [0, "LK"]]
, [ "ll"  , [0, "-L"]]
, [ "l|l" , [1, "-L"]]
, [ "lm"  , [0, "+"]]
, [ "lz"  , [0, "-LS"]]
, [ "m"   , [0, "M"]]
, [ "mm"  , [0, "-M"]]
, [ "m|m" , [1, "-M"]]
, [ "me"  , [1, "M-"]]
// TODO: "un" N
, [ "n"   , [0, "N"]]
, [ "ñ"   , [0, "N"]]
, [ "nch" , [0, "Nʃ"]]     // TODO: documentation, ch is Kʃ
, [ "ng"  , [0, "+N"]]
, [ "nia" , [0, "JNA"]]    // think "nia"/"ina"
, [ "nk"  , [0, "+N"]]
, [ "nck" , [0, "+N"]]     // Planck
, [ "nn"  , [0, "-N"]]
, [ "n|n" , [1, "-N"]]
, [ "nz"  , [0, "+NS"]]
, [ "o"   , [0, "O"]]
, [ "ó"   , [0, "O"]]
, [ "ô"   , [0, "O"]]
, [ "ø"   , [0, "ÄO"]]      // U+00F8
, [ "ør"  , [0, "ÄO"]]
, [ "oe"  , [0, "ÄO"]]
, [ "oh"  , [0, "~O"]]
, [ "ohr" , [0, "~O"]]
, [ "oi"  , [0, "EU"]]
, [ "oo"  , [0, "O/O", 1]]
, [ "oor" , [0, "O/~O", 1]]
, [ "or"  , [0, "~O"]]
, [ "orr" , [0, "~O+"]]
, [ "oß"  , [0, "~O+S"]]
, [ "ö"   , [0, "ÄO"]] // TODO: ö as O or ÄO, ÄO overlapps with ÄH, ÄHR, ÄR
, [ "öh"  , [0, "ÄO"]]
, [ "öhr" , [0, "ÄO"]]
, [ "ör"  , [0, "ÄO"]]
, [ "örr" , [0, "ÄO+"]]
, [ "öß"  , [0, "ÄO+S"]]
, [ "p"   , [0, "P"]]
, [ "p"   , [0, "BD"]]
, [ "pf"  , [0, "BF"]]
, [ "ph"  , [0, "F"]]       // TODO: documentation
, [ "pp"  , [0, "P"]]
, [ "p|p" , [1, "P"]]
, [ "ps"  , [0, "SDJ"]]     // TODO: documentation
, [ "pt"  , [0, "BDJ"]]     // TODO: documentation
, [ "qa"  , [0, "GDA"]]
, [ "qi"  , [0, "SJI"]]
, [ "qu"  , [0, "GDW"]]
, [ "r"   , [0, "R"]]
, [ "rh"  , [0, "R"]]
, [ "ria" , [0, "JRA"]]     // think "ria"/"ira"
, [ "rio" , [0, "JRO"]]     // think "rio"/"iro"
// "re" TODO: more efficiency
// , "ren"  : [0, "e"]  // TODO: too greedy?
, [ "rwan" , [0, "WRAN"]]   // TODO: documentation Rw- as WR
, [ "s"   , [0, "S"]]
, [ "s"   , [0, "s"]]
, [ "sc"  , [0, "GDJ"]]     // e.g. scooter
, [ "sc"  , [0, "KS"]]      // e.g. disc
, [ "sch" , [0, "SJ"]]
, [ "sch" , [0, "ʃ"]]       // U+0283
, [ "schm", [0, "SM"]]
, [ "schl", [1, "SL"]]
, [ "schn", [1, "SN"]]
, [ "schr", [1, "SR"]]
, [ "schw", [0, "SW"]]
, [ "se"  , [1, "Ss"]]
, [ "sh"  , [0, "SJ"]]      // cash, auscashen
, [ "sh"  , [0, "ʃ"]]       // cash, auscashen
, [ "sp"  , [0, "BF"]]      // TODO: documentation
, [ "sp"  , [0, "PS"]]      // TODO: documentation -sp = PS
, [ "sk"  , [0, "GDJ"]]     // TODO: documentation x, sk -> GDJ
, [ "sk"  , [0, "KS"]]      // tink "sk"/"ks"
, [ "ss"  , [0, "S"]]
, [ "s|s" , [1, "S"]]
, [ "st"  , [0, "SD"]]
, [ "sz"  , [0, "SF"]]      // sz = z = SF
, [ "ß"   , [0, "S"]]       // TODO: ß in onset: probably collisions
, [ "t"   , [0, "DJ"]]
, [ "t"   , [0, "-D"]]
, [ "te"  , [1, "DJ"]]     // TODO: maybe "-D"
, [ "th"  , [0, "D"]]
, [ "ti"  , [1, "DJ"]]
, [ "tia" , [0, "DJA"]]
, [ "tio" , [0, "DJO"]]
, [ "tja" , [0, "DJA"]]
, [ "ti|o", [1, "DJO"]]
, [ "tt"  , [0, "-D"]]      // t|t isn't logically possible
, [ "trio", [0, "DJRO"]]
, [ "ts"  , [0, "SF"]]
, [ "ts"  , [0, "s"]]
, [ "tts" , [0, "s"]]
, [ "tsch", [0, "SJ"]]      // TODO: documentation: tsch- like sch-
, [ "tsch", [0, "ʃD"]]      // TODO: documentation: -tsch like -scht
, [ "tscht", [0, "+ʃD"]]
, [ "tz"  , [0, "+S"]]
, [ "u"   , [0, "U"]]
, [ "û"   , [0, "U"]]
, [ "ue"  , [0, "Ü"]]
, [ "uh"  , [0, "~U"]]
, [ "uhr" , [0, "~U"]]
, [ "ur"  , [0, "~U"]]
, [ "urr" , [0, "~U+"]]
, [ "uß"  , [0, "~U+S"]]
, [ "ü"   , [0, "Ü"]]
, [ "über", [1, "BEÜ"]]     // TODO: documentation: shortcut über BEÜ
, [ "üe"  , [0, "Ü"]]       // Bircher-Müesli
, [ "üh"  , [0, "~Ü"]]
, [ "ür"  , [0, "~Ü"]]
, [ "ühr" , [0, "~Ü"]]
, [ "ürr" , [0, "~Ü+"]]
, [ "üß"  , [0, "~Ü+S"]]
, [ "v"   , [0, "F"]]
, [ "ver" , [1, "F"]]
, [ "w"   , [0, "W"]]
, [ "w"   , [0, "-F"]]
, [ "x"   , [0, "GDJ"]]      // TODO: documentation
, [ "x"   , [0, "KS"]]
, [ "y"   , [0, "J"]]
, [ "y"   , [0, "I"]]
, [ "yr"  , [0, "~Ü"]]
, [ "z"   , [0, "SF"]]
, [ "z"   , [0, "+S"]]
, [ "-"   , [0, "HIFn"]]
// zt  : [0, "+SD"] -- default zt -> "SD"
// english
, [ "ace"  , [0, "ÄIS"]]
, [ "air"  , [0, "Ä"]]       // think "är"
, [ "ake"  , [0, "ÄIK"]]
, [ "ate"  , [0, "ÄID"]]
, [ "ay"   , [0, "ÄI"]]
, [ "bane" , [0, "BÄIN"]]
, [ "base" , [0, "BÄIS"]]
, [ "boiled", [0, "BEULD"]]
, [ "buil" , [0, "BIL"]]      // e.g. bodybuilding
, [ "busi|ness", [0, "BIS/NES", 4]]
, [ "bute"  , [0, "BJUD"]]
, [ "byte" , [0, "BEID"]]
, [ "cache" , [0, "GDÄʃ"]]
, [ "can|dle", [0, "GDÄN/DEL", 3]] // e.g. candle-light-dinner
, [ "charles", [0, "SJAOLS"]]
, [ "case" , [0, "GDÄIS"]]
, [ "cheese", [0, "SJ~IS"]]
, [ "chise", [0, "SJEIS"]]    // franchise
, [ "choice", [0, "SJEUS"]]
, [ "coa"  , [0, "GDO"]]      // e.g. coa|chen
, [ "code" , [0, "GDOD"]]
, [ "come" , [0, "GDAM"]]
, [ "con|ve|ni|e|nce", [0, "GDON/WE/NI/+NS", 3, 2, 2]]
, [ "core" , [0, "GD~O"]]
, [ "dale" , [0, "DÄIL"]]
, [ "dd"   , [0, "D"]]
, [ "deep" , [0, "DIP"]]
, [ "down" , [0, "DAUN"]]
, [ "dressed", [0, "DRESD"]]
, [ "drive", [0, "DREIF"]]
, [ "duke" , [0, "DUK"]]
, [ "ea"   , [0, "I"]]        // Angl. "beat" "beamer", "team"
, [ "ease" , [0, "IS"]]
, [ "em|pire", [0, "EM/BDEI/R", 2, 2]] // TODO: documentation, very irregular
, [ "feed" , [0, "F~ID"]]
, [ "file" , [0, "FEIL"]]
, [ "five" , [0, "FEIF"]]
, [ "frame" , [0, "FRÄIM"]]
, [ "game"  , [0, "GÄIM"]]
, [ "gg"    , [0, "K"]]
, [ "grade" , [0, "GRÄID"]]
, [ "green" , [0, "GRIN"]]
, [ "guard" , [0, "GAOD"]]    // e.g. bodyguard
, [ "have"  , [0, "HÄF"]]
, [ "hedge", [0, "HEʃD"]]     // like heschd (like hedsch)
, [ "home" , [0, "HOM"]]
, [ "house", [0, "HAUS"]]
, [ "hype" , [0, "HEIP"]]
, [ "idge" , [0, "IʃD"]]       // e.g. bridge, Dʃ = ʃD
, [ "ife"  , [0, "EIF"]]       // e.g. life
, [ "ight" , [0, "EID"]]       // e.g. light, night, knight
, [ "ike" , [0, "EIK"]]
, [ "i|mage", [0, "I/MÄʃD", 1]]
, [ "ime"  , [0, "EIM"]]       // e.g. time, prime
, [ "inge" , [0, "INʃ"]]       // e.g. binge
, [ "jane" , [0, "JÄIN"]]
, [ "juke" , [0, "JUK"]]      // jukebox
, [ "kee"  , [0, "GDI"]]      // barkeeper
, [ "kite" , [0, "GDEID"]]
, [ "kode" , [0, "GDOD"]]
, [ "launch", [0, "LONʃ"]]
, [ "lege" , [0, "LEʃD"]]     // e.g. college
, [ "line" , [0, "LEIN"]]
, [ "lign" , [0, "LEIN"]]
, [ "live" , [0, "LEIF"]]
, [ "lone" , [0, "LON"]]
, [ "love" , [0, "LOF"]]
, [ "loa"  , [0, "LO"]]       // e.g. boot|loa|der
, [ "lounge", [0, "LAUNʃ"]]
, [ "made" , [0, "MÄID"]]
, [ "mine" , [0, "MEIN"]]
, [ "mixed", [0, "MIKSD"]]
, [ "mole" , [0, "MOL"]]
, [ "more" , [0, "M~O"]]
, [ "mouse", [0, "MAUS"]]
, [ "move" , [0, "MUF"]]
, [ "nage" , [0, "NÄʃD"]]     // ma|nage|ment
, [ "nice" , [0, "NEIS"]]
, [ "nine" , [0, "NEIN"]]
, [ "nute" , [0, "NED"]]      // e.g. last-minute
, [ "oach" , [0, "OʃD"]]      // TODO: documentation tsch-rule
, [ "oar"  , [0, "~O"]]       // e.g. board
, [ "of|fice", [0, "OF/FIS", 2]]
, [ "one"  , [0, "ON"]]
, [ "ore"  , [0, "~O"]]       // e.g. Bangalore
, [ "ose"  , [0, "OS"]]       // e.g. close-up
, [ "ou"   , [0, "AU"]]       // not pretty but efficient: french "ou" is AU, too (jour)
, [ "ough" , [0, "O"]]        // e.g. Doughnut
, [ "our"  , [0, "AU"]]
, [ "own" , [0, "AUN"]]       // town, clown
, [ "page" , [0, "BDÄIʃ"]]
, [ "pipe" , [0, "BDEIP"]]
, [ "pole" , [0, "BDOL"]]      // e.g. Pole-Position
, [ "plugged", [0, "BDLAKD"]]
, [ "prince", [0, "BDI+NS"]]
, [ "puzz" , [0, "BDAS"]]
, [ "queen", [0, "GDWIN"]]
, [ "rate" , [0, "RÄID"]]
, [ "ride" , [0, "REID"]]
, [ "roa"  , [0, "RO"]]        // e.g. off-road, roaming
, [ "royce", [0, "REUS"]]
, [ "sales", [0, "SÄILS"]]
, [ "save" , [0, "SÄIF"]]
, [ "safe" , [0, "SÄIF"]]
, [ "scope" , [0, "GDJOP"]]
, [ "ser|vice", [0, "SEO/FIS", 3]]
, [ "share", [0, "SJÄ"]]
, [ "shave", [0, "SJÄIF"]]
, [ "shire", [0, "SJEO"]]
, [ "shore", [0, "SJ~O"]]
, [ "sive" , [0, "SIF"]]     // e.g. inclusive
, [ "spare", [0, "SDJÄ"]]
, [ "speech", [0, "BFIʃD"]]  // speech, like spitsch (like spischt)
, [ "square", [0, "GDJÄ"]]
, [ "squat",  [0, "GDJOD"]]
, [ "squash",  [0, "GDJOʃ"]]
, [ "slide" , [0, "SLEID"]]
, [ "stage" , [0, "SDÄIʃD"]]
, [ "stream" , [0, "SDRIM"]]
, [ "street" , [0, "SDRID"]]
, [ "store", [0, "SD~O"]]
, [ "source", [0, "S~OS"]]    // e.g. open-source
, [ "sure" , [0, "SJEO"]]
, [ "suit" , [0, "SUD"]]
, [ "tape" , [0, "DJÄIP"]]
, [ "tch"  , [0, "ʃD"]]       // e.g. batch, tch like tsch, like scht
, [ "tease", [0, "DJIS"]]
, [ "teen" , [0, "DJIN"]]
, [ "tive" , [0, "DJIF"]]     // e.g. incentive
, [ "trai" , [0, "BDRÄI"]]    // e.g. trainieren
, [ "tube" , [0, "DJUP"]]     // youtube
, [ "ture" , [0, "SJEO"]]     // TODO: maybe make more distinct. future, feature, nature
, [ "tw"   , [0, "DW"]]       // e.g. twerken
, [ "twee", [0, "DW~I"]]      // e.g. twee|ten
, [ "ue"   , [0, "U"]]        // e.g. blues
, [ "uy"   , [0, "EI"]]       // e.g. buy-out
, [ "verse", [0, "FEOS"]]     // reverse
, [ "ware" , [0, "WÄ"]]     
, [ "wear" , [0, "WÄ"]]
, [ "wh"   , [0, "W"]]
, [ "whistle", [0, "WIS/SEL", 3]]
, [ "white", [0, "WEID"]]
// french
, [ "aide" , [0, "ÄD"]]
, [ "aille" , [0, "AI"]]      // e.g. braille
, [ "aire" , [0, "Ä"]]
, [ "aisse", [0, "ÄS"]]
, [ "aque" , [0, "AK"]]       // e.g. opaque
, [ "anc" ,  [0, "AN"]]       // TODO: documentation french nasal: an = AN, thus anc same
, [ "ance" , [0, "A+NS"]]     // think "onz"
, [ "a|nce" , [0, "A+NS"]]    
, [ "asse" , [0, "AS"]]
, [ "beige", [0, "BEʃ"]]
, [ "carte", [0, "GDAOD"]]    // think "kart"
, [ "charme", [0, "SJAM"]]
, [ "cole" , [0, "GDOL"]]     // e.g. Nicole
, [ "creme", [0, "GDREM"]]
, [ "eau"  , [0, "O"]]        // e.g. Chateau
, [ "elle" , [0, "EL"]]
, [ "ence" , [0, "O+NS"]]     // think "onz"
, [ "e|nce" , [0, "O+NS"]]     // think "onz"
, [ "e|nne", [0, "EN"]]
, [ "e|nne", [1, "n"]]
, [ "eque" , [0, "EK"]]
, [ "erre" , [0, "EO"]]
, [ "ette" , [0, "ED"]]
, [ "e|tui", [0, "E/DJI", 1]]
, [ "eur"  , [0, "ÄO"]]       // think "ör"
, [ "feuille", [0, "FÄO/~I", 3]] // e.g. portefeuille
, [ "force", [0, "F~OS"]]
, [ "gage" , [0, "GAʃ"]]      // e.g. engagement
, [ "geoi" , [0, "J~O"]]      // e.g. bour|geoi|sie
, [ "gime" , [0, "JIM"]]      // e.g. regime
, [ "guette", [0, "GED"]]
, [ "heme" , [0, "HEM"]]      // e.g. boheme
, [ "homme", [0, "HOM"]]
, [ "ique" , [0, "IK"]]
, [ "ize"  , [0, "IS"]]       // .. e.g. Belize
, [ "louis", [0, "LU/I", 3]]
, [ "louise", [0, "LU/IS", 3]]
, [ "mage" , [0, "MAʃ"]]      // hommage
, [ "mousse", [0, "M~US"]]
, [ "muse" , [0, "MÜS"]]
, [ "naie" , [0, "NÄ"]]
, [ "onne" , [0, "ON"]]
, [ "oire" , [0, "~O"]]
, [ "oir"  , [0, "~O"]]
, [ "oise" , [0, "AS"]]
, [ "ouil|le", [0, "U/~I", 2]]
, [ "ouille",  [0, "U/~I", 2]]
, [ "ouil|lon", [0, "U/~I/ON", 2, 2]]
, [ "ouche" , [0, "Uʃ"]]
, [ "oy"    , [0, "ÄU"]]      // TODO: documentation -oy as ÄU
, [ "pere"  , [0, "BDEO"]]    // e.g. ampere
, [ "porte" , [0, "BD~OD"]]   // e.g. portemonnaie
, [ "rage" , [0, "RAʃ"]]
, [ "seille", [0, "SEI"]]     // e.g. Marseille
, [ "sieur" , [0, "SJÄO"]]    // e.g. Monsieur, think sjö
, [ "sui|te", [0, "SWI/BDE", 3]]
, [ "tête"  , [0, "DJED"]]
, [ "toas" , [0, "DJOS"]]     // e.g. Toast, Toas|ter
, [ "tude"  , [0, "DJÜD"]]     // e.g. Pla|ti|tude
, [ "ueule", [0, "EU"]]       // e.g. amuse-gueule
, [ "ville" , [0, "FIL"]]     // e.g. Brazzaville
, [ "vite"  , [0, "FID"]]
, [ "yenne" , [0, "JEN"]]     // e.g. Cayenne
// neerlandais
, [ "dijk"  , [0, "DEIK"]]
// syllable exceptions
, [ "beef"  , [0, "BIF"]]
, [ "geest" , [0, "GEOSD"]]
, [ "guide" , [0, "GEID"]]
, [ "hawaii", [0, "HA/WAI", 2]]
, [ "heia"  , [0, "HEI/A", 3]]
, [ "holtz" , [0, "HOLs"]]
, [ "kuit"  , [0, "GDWID"]]     // e.g. Biskuit
, [ "laie"  , [0, "LA/JE", 2]]
, [ "oa|se" , [0, "O/A/SE", 1, 1]]
, [ "oque" , [0, "OK"]]       // e.g. baroque
, [ "ral|lye", [0, "RAL/LI", 3]]
, [ "screen", [0, "GDJRIN"]]
, [ "seel"  , [0, "SEOL"]]
, [ "side"  , [0, "SEID"]]
, [ "steak" , [0, "SDÄK"]]
, [ "taupe" , [0, "GDOP"]]
, [ "taur"  , [0, "GDAU"]]       // e.g. Minotaur
, [ "sau|ternes", [0, "SO/DJEON"]]
, [ "tion"  , [0, "SJEN"]]       // think "schen" like in action; "ti|o" is dealt with regularly
, [ "wide"  , [0, "WEID"]]
// common abbreviations
, [ "kfz"   , [0, "GFS"]]
, [ "vpn"   , [0, "FPn"]]
, [ "tv"    , [0, "BDF"]]
, [ "unesco", [0, "U/NES/GDO", 1, 3]]
, [ "unicef", [0, "U/NI/SFEF", 1, 2]]
, [ "uefa"  , [0, "U/E/FA", 1, 1]]
]
